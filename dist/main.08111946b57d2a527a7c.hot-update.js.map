{"version":3,"file":"main.08111946b57d2a527a7c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACsB;AACtB;AACA;AAC+B;AACuC;AACF;AACS;AAC7E;AACA;AACsC;AACtC;AACA;AACA,eAAe,kCAAK;AACpB,oBAAoB,gFAAU;AAC9B,mBAAmB,8EAAS;AAC5B,uBAAuB,uFAAa;AACpC;AACA;AACA,YAAY,gDAAE;AACd;AACA;AACA,WAAW,oDAAE;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB,IAAI,qBAAqB;AACjE,iBAAiB,yBAAyB,IAAI,qBAAqB;AACnE;AACA;AACA;AACA;AACA;AACA;AACwB;AACxB;AACA;AACuB;AACD;AACO;AACH;AACA;AACJ;AACtB;AACA;;;;;;;;UClDA","sources":["webpack://opensail/./src/index.js","webpack://opensail/webpack/runtime/getFullHash"],"sourcesContent":["// Import styles\r\nimport './styles.css';\r\n\r\n// Import Three.js and components\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\n// Import Socket.io client\r\nimport { io } from 'socket.io-client';\r\n\r\n// Make Three.js components available globally\r\nwindow.THREE = THREE;\r\nwindow.GLTFLoader = GLTFLoader;\r\nwindow.OBJLoader = OBJLoader;\r\nwindow.OrbitControls = OrbitControls;\r\n\r\n// Configure Socket.io to automatically find the correct port\r\nwindow.io = io;\r\nwindow.socketConnect = () => {\r\n    // This will connect to the correct port by using relative URL\r\n    return io('/', { \r\n        transports: ['websocket'],\r\n        reconnection: true,\r\n        reconnectionAttempts: 5\r\n    });\r\n};\r\n\r\n// Set paths for assets - use path without duplicating the origin\r\nwindow.ASSET_PATH = {\r\n    // Use absolute URLs to ensure paths work in all contexts\r\n    models: `${window.location.protocol}//${window.location.host}/assets/models/`,\r\n    textures: `${window.location.protocol}//${window.location.host}/assets/textures/`\r\n};\r\n\r\n// Log asset paths to help with debugging\r\nconsole.log('Asset paths configured:', window.ASSET_PATH);\r\n\r\n// Import game modules\r\nimport './js/client.js';\r\n\r\n// Import our game classes\r\nimport './js/utils.js';\r\nimport './js/boat.js';\r\nimport './js/environment.js';\r\nimport './js/renderer.js';\r\nimport './js/controls.js';\r\nimport './js/game.js';\r\n\r\n// The client.js will initialize the game when the DOM is loaded ","__webpack_require__.h = () => (\"8812746621140ed086bf\")"],"names":[],"sourceRoot":""}